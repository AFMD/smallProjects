function [fitresult, gof] = createFit(x1, int1, y)
%CREATEFIT2(X1,INT1,Y)
%  Create a fit.
%
%  Data for 'hanyang' fit:
%      X Input : x1
%      Y Input : int1
%      Z Output: y
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 26-Feb-2020 22:48:58


%% Fit: 'hanyang'.
[xData, yData, zData] = prepareSurfaceData( x1, int1, y );

% Set up fittype and options.
ft = fittype( 'y0+subsref(conv(a*exp(-1/tau*x1),int1),struct(''type'',''()'',''subs'',{{1:length(x1),1}}))', 'independent', {'x1', 'int1'}, 'dependent', 'z' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Algorithm = 'Levenberg-Marquardt';
opts.DiffMaxChange = 1e-08;
opts.DiffMinChange = 1e-20;
opts.Display = 'Off';
opts.MaxFunEvals = 6000000;
opts.MaxIter = 4000000;
opts.Robust = 'LAR';
opts.StartPoint = [2 0.16 12];
opts.TolFun = 1e-16;
opts.TolX = 4e-16;

% Fit model to data.
[fitresult, gof] = fit( [xData, yData], zData, ft, opts );

% Plot fit with data.
figure( 'Name', 'hanyang' );
h = plot( fitresult, [xData, yData], zData );
legend( h, 'hanyang', 'y vs. x1, int1', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 'x1', 'Interpreter', 'none' );
ylabel( 'int1', 'Interpreter', 'none' );
zlabel( 'y', 'Interpreter', 'none' );
grid on
view( -35.8, 27.4 );


